import React, { useState } from 'react';
import { useTelegram } from '../../hooks/useTelegram';
import 'bootstrap/dist/css/bootstrap.min.css';

const Form = () => {
    const { user } = useTelegram();
    const owner = user?.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π";
    const [status, setStatus] = useState("–í —Ä–∞–±–æ—Ç–µ");
    const [tvs, setTvs] = useState([]);
    const [currentTv, setCurrentTv] = useState({ diagonal: "40", workType: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞" });
    const [isAdding, setIsAdding] = useState(false);
    const [editIndex, setEditIndex] = useState(null);

    const handleStatusChange = (e) => setStatus(e.target.value);

    const handleTvChange = (e) => {
        setCurrentTv({ ...currentTv, [e.target.name]: e.target.value });
    };

    const startAdding = () => {
        setCurrentTv({ diagonal: "40", workType: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞" });
        setEditIndex(null);
        setIsAdding(true);
    };

    const saveTv = () => {
        if (editIndex !== null) {
            setTvs(tvs.map((tv, i) => (i === editIndex ? currentTv : tv)));
        } else {
            setTvs([...tvs, currentTv]);
        }
        setIsAdding(false);
        setCurrentTv({ diagonal: "40", workType: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞" });
        setEditIndex(null);
    };

    const editTv = (index) => {
        setCurrentTv(tvs[index]);
        setEditIndex(index);
        setIsAdding(true);
    };

    const removeTv = (index) => {
        setTvs(tvs.filter((_, i) => i !== index));
    };

    return (
        <div className="container py-4">
            <h2 className="mb-3">–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏</h2>

            <div className="mb-3">
                <input className="form-control" type="text" placeholder="–ù–æ–º–µ—Ä –ª–∏–¥–∞" />
            </div>

            <div className="mb-3">
                <input className="form-control" placeholder={`–í–ª–∞–¥–µ–ª–µ—Ü –∑–∞—è–≤–∫–∏: ${owner}`} readOnly />
            </div>

            <div className="mb-3">
                <label className="form-label">–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏</label>
                <select className="form-select" value={status} onChange={handleStatusChange}>
                    <option>–í —Ä–∞–±–æ—Ç–µ</option>
                    <option>–î—Ä—É–≥–æ–π —Ä–µ–≥–∏–æ–Ω</option>
                    <option>–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π</option>
                    <option>–ù–µ–¥–æ–∑–≤–æ–Ω</option>
                    <option>–ù–æ—á–Ω–æ–π</option>
                    <option>–ù–æ—á–Ω–æ–π —Ä–∞–Ω–Ω–∏–π</option>
                    <option>–ù—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</option>
                    <option>–ù—É–∂–Ω–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ</option>
                    <option>–û—Ñ–æ—Ä–º–ª–µ–Ω</option>
                    <option>–ü—Ä–æ–∑–≤–æ–Ω–∏—Ç—å –∑–∞–≤—Ç—Ä–∞</option>
                    <option>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞</option>
                </select>
            </div>

            <button className="btn btn-primary" onClick={startAdding}>–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä</button>

            {isAdding && (
                <div className="card my-3 p-3">
                    <div className="mb-3">
                        <label className="form-label">–î–∏–∞–≥–æ–Ω–∞–ª—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞</label>
                        <select className="form-select" name="diagonal" value={currentTv.diagonal} onChange={handleTvChange}>
                            <option>30</option>
                            <option>40</option>
                            <option>50</option>
                            <option>60</option>
                            <option>70</option>
                            <option>80</option>
                        </select>
                    </div>

                    <div className="mb-3">
                        <label className="form-label">–í–∏–¥ —Ä–∞–±–æ—Ç—ã</label>
                        <select className="form-select" name="workType" value={currentTv.workType} onChange={handleTvChange}>
                            <option>–£—Å—Ç–∞–Ω–æ–≤–∫–∞</option>
                            <option>–î–µ–º–æ–Ω—Ç–∞–∂</option>
                            <option>–ù–∞—Å—Ç—Ä–æ–π–∫–∞</option>
                        </select>
                    </div>

                    <button className="btn btn-success" onClick={saveTv}>
                        {editIndex !== null ? "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è" : "–î–æ–±–∞–≤–∏—Ç—å"}
                    </button>
                </div>
            )}

            {tvs.length > 0 && (
                <div className="mt-4">
                    <h4>–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä—ã:</h4>
                    <ul className="list-group">
                        {tvs.map((tv, index) => (
                            <li key={index} className="list-group-item d-flex justify-content-between align-items-center">
                                <span>üì∫ –î–∏–∞–≥–æ–Ω–∞–ª—å: <b>{tv.diagonal}"</b>, –í–∏–¥ —Ä–∞–±–æ—Ç—ã: <b>{tv.workType}</b></span>
                                <div className="btn-group">
                                    <button className="btn btn-sm btn-outline-secondary" onClick={() => editTv(index)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                                    <button className="btn btn-sm btn-outline-danger" onClick={() => removeTv(index)}>–£–¥–∞–ª–∏—Ç—å</button>
                                </div>
                            </li>
                        ))}
                    </ul>
                </div>
            )}
        </div>
    );
};

export default Form;
